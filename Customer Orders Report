#In this project, I worked on a database filled with customer order information going back multiple months to answer the following questions


#1. How many orders were placed in January? 
SELECT count(orderID) AS order_count FROM BIT_DB.JanSales
WHERE orderID<>"Order ID" AND length(orderID)=6;

#2. How many of those orders were for an iPhone? 
SELECT count(*) AS order_count FROM BIT_DB.JanSales 
WHERE orderID<>"Order ID" AND length(orderID)=6
AND Product="iPhone";

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT BIT_DB.customers.acctnum FROM BIT_DB.customers
Inner JOIN BIT_DB.FebSales ON BIT_DB.customers.order_id=BIT_DB.FebSales.orderID;

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT Product, price, sum(quantity) AS total_sold 
FROM BIT_DB.JanSales Group By Product ORDER BY price Asc; 

#5. What is the total revenue for each product sold in January?
SELECT Product, price, sum(Quantity) AS total_sold, ROUND(sum(Quantity)*price,2) AS Revenue 
FROM BIT_DB.JanSales Group By Product; 

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, sum(Quantity), price, sum(Quantity)*price AS Revenue, location 
FROM BIT_DB.FebSales WHERE location="548 Lincoln St, Seattle, WA 98101";

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT acctnum, sum(Quantity) AS total_bought, Round(sum(price*Quantity), 2) AS amount_spent
FROM BIT_DB.FebSales 
LEFT OUTER JOIN BIT_DB.customers ON BIT_DB.customers.order_id=BIT_DB.FebSales.orderID
WHERE Quantity>2 AND Quantity<>"Quantity Ordered" AND acctnum IS NOT NULL
Group By acctnum;

SELECT count(acctnum) AS total_customers, ROUND(AVG(Quantity*price),2) AS Avg_spent
FROM BIT_DB.FebSales 
LEFT OUTER JOIN BIT_DB.customers ON BIT_DB.customers.order_id=BIT_DB.FebSales.orderID
WHERE Quantity>2 AND Quantity<>"Quantity Ordered" AND acctnum IS NOT NULL;
